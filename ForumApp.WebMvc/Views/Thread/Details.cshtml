@model ForumApp.Models.ThreadDetail

@{
    string _title = Model.Title;
    ViewBag.Title = _title;
}

<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item">@Html.ActionLink("Home", "Index", "Home")</li>
        <li class="breadcrumb-item">@Html.ActionLink("Forums", "Index", "Forum")</li>
        <li class="breadcrumb-item">@Html.ActionLink(Model.ForumName, "Details", "Forum", new { id = Model.ForumId }, null)</li>
        <li class="breadcrumb-item active" aira-current="page">@_title</li>
    </ol>
</nav>

<h1>@_title</h1>

<div class="mb-3">
    @if (Model.IsBookmarked)
    {
        using (Html.BeginForm("DeleteFromThread", "Bookmark", new { threadId = Model.ThreadId }))
        {
            @Html.AntiForgeryToken()
            <button type="submit" class="btn btn-danger"><i class="bi bi-bookmark-x"></i> Unbookmark</button>
        }
    }
    else
    {
        using (Html.BeginForm("CreateFromThread", "Bookmark", new { threadId = Model.ThreadId }))
        {
            @Html.AntiForgeryToken()
            <button type="submit" class="btn btn-primary"><i class="bi bi-bookmark-check"></i> Bookmark</button>
        }
    }
</div>

@foreach (var post in Model.Posts)
{
    <article class="card shadow-sm rounded mb-3" id="post-@post.PostId">
        <div class="row g-0">
            <div class="card-body bg-light col-md-3">
                <div class="card-title">
                    @Html.DisplayFor(modelItem => post.UserName)
                </div>
                <div class="card-subtitle text-muted small">
                    @Html.DisplayFor(modelItem => post.CreatedUtc)
                </div>
            </div>
            <div class="card-body col-md-9">
                <div class="card-text mb-3">
                    @Html.DisplayFor(modelItem => post.Content)
                </div>

                @if (post.ModifiedUtc.HasValue)
                {
                    <div class="card-text text-muted small">
                        <i>Post edited @Html.DisplayFor(modelItem => post.ModifiedUtc.Value)</i>
                    </div>
                }

                @if (post.IsEditable)
                {
                    <div class="btn-group btn-group-sm" role="group">
                        @Html.ActionLink("Edit", "Edit", "Post", new { id = post.PostId }, new { @class = "btn btn-outline-secondary" })
                        @Html.ActionLink("Delete", "Delete", "Post", new { id = post.PostId }, new { @class = "btn btn-outline-secondary" })
                    </div>
                }
            </div>
        </div>
    </article>
}

<div class="row mb-3">
    <div class="btn-group btn-group-lg col-md-9 offset-md-3">
        @Html.ActionLink("Reply", "Create", "Post", new { id = Model.ThreadId }, new { @class = "btn btn-primary" })
    </div>
</div>
